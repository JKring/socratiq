{
  "contractName": "Truthy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "truthAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"truthAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Argument.sol\":\"Truthy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Argument.sol\":{\"keccak256\":\"0xb030593c734cc0f9d60be761dd5e2aa54a7a74b85d6de6d0be167db17d13f2aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83b427e5a8eb47b7d778f35f159f8e47e3f7d045d757fe1c40ed07efdaf1f853\",\"dweb:/ipfs/QmdptpSi9nzz6EwfLUkeykN9VyTQEYNqq6NSzMfxduPUKA\"]},\"project:/contracts/Truth.sol\":{\"keccak256\":\"0xb20225e1fd7ecb1c133c16df3f08a1cda504833f99b241f29f8f7f6b47ca5520\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://226423571a05db4aef3476a76d3936fa979e340e747fbbd72b053f5b94c3d2d0\",\"dweb:/ipfs/QmdmsWMuCLb6DbbBi2TWFE86DqZW5J6SZuDnww5fmTKGoV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610155380380610155833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b603f806101166000396000f3fe6080604052600080fdfea26469706673582212200628d1d638423f80fec605f5556a6a1a4c7d52acda28b6730ef68eacc997d4c964736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600080fdfea26469706673582212200628d1d638423f80fec605f5556a6a1a4c7d52acda28b6730ef68eacc997d4c964736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:2",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:2"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:2",
                "type": ""
              }
            ],
            "src": "7:75:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:2"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:2",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:2"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:2",
                "type": ""
              }
            ],
            "src": "334:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:2",
                "type": ""
              }
            ],
            "src": "466:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:2"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:2",
                "type": ""
              }
            ],
            "src": "568:122:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:2"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:2",
                "type": ""
              }
            ],
            "src": "696:143:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:2",
                "type": ""
              }
            ],
            "src": "845:351:2"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [],
  "sourceMap": "89:109:0:-:0;;;124:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;178:12;164:5;;:27;;;;;;;;;;;;;;;;;;124:72;89:109;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;89:109:0:-;;;;;;;",
  "deployedSourceMap": "89:109:0:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./Truth.sol\";\n\ncontract Truthy {\n  Truth truth;\n  constructor(address truthAddress) {\n    truth = Truth(truthAddress);\n  }\n}\n\nabstract contract Argument is Truthy {\n  enum Status{ BETTING, DEBATING, FINISHED, CANCELED }\n  Status status;\n  Status constant defaultStatus = Status.BETTING;\n\n  constructor() {\n    status = defaultStatus;\n  }\n\n  function getStatus() public view returns (Status) {\n    return status;\n  }\n\n  function startDebating() public {\n    status = Status.DEBATING;\n  }\n\n  function cancel() public returns (bool) {\n    if (truth.isModerator(msg.sender)) {\n      status = Status.CANCELED;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function endDebating() public {\n    status = Status.FINISHED;\n  }\n}\n",
  "sourcePath": "/Users/jake/socratiq/contracts/Argument.sol",
  "ast": {
    "absolutePath": "project:/contracts/Argument.sol",
    "exportedSymbols": {
      "Argument": [
        92
      ],
      "Truth": [
        192
      ],
      "Truthy": [
        18
      ]
    },
    "id": 93,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/Truth.sol",
        "file": "./Truth.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 193,
        "src": "66:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Truthy",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 18,
        "linearizedBaseContracts": [
          18
        ],
        "name": "Truthy",
        "nameLocation": "98:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "truth",
            "nameLocation": "115:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 18,
            "src": "109:11:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Truth_$192",
              "typeString": "contract Truth"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "Truth",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 192,
                "src": "109:5:0"
              },
              "referencedDeclaration": 192,
              "src": "109:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Truth_$192",
                "typeString": "contract Truth"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "158:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10,
                      "name": "truth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "164:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Truth_$192",
                        "typeString": "contract Truth"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12,
                          "name": "truthAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "178:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11,
                        "name": "Truth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "172:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Truth_$192_$",
                          "typeString": "type(contract Truth)"
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "172:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Truth_$192",
                        "typeString": "contract Truth"
                      }
                    },
                    "src": "164:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Truth_$192",
                      "typeString": "contract Truth"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "164:27:0"
                }
              ]
            },
            "id": 17,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "truthAddress",
                  "nameLocation": "144:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "136:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "136:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "135:22:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "158:0:0"
            },
            "scope": 18,
            "src": "124:72:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 93,
        "src": "89:109:0",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 19,
              "name": "Truthy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18,
              "src": "230:6:0"
            },
            "id": 20,
            "nodeType": "InheritanceSpecifier",
            "src": "230:6:0"
          }
        ],
        "canonicalName": "Argument",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 92,
        "linearizedBaseContracts": [
          92,
          18
        ],
        "name": "Argument",
        "nameLocation": "218:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Argument.Status",
            "id": 25,
            "members": [
              {
                "id": 21,
                "name": "BETTING",
                "nameLocation": "254:7:0",
                "nodeType": "EnumValue",
                "src": "254:7:0"
              },
              {
                "id": 22,
                "name": "DEBATING",
                "nameLocation": "263:8:0",
                "nodeType": "EnumValue",
                "src": "263:8:0"
              },
              {
                "id": 23,
                "name": "FINISHED",
                "nameLocation": "273:8:0",
                "nodeType": "EnumValue",
                "src": "273:8:0"
              },
              {
                "id": 24,
                "name": "CANCELED",
                "nameLocation": "283:8:0",
                "nodeType": "EnumValue",
                "src": "283:8:0"
              }
            ],
            "name": "Status",
            "nameLocation": "246:6:0",
            "nodeType": "EnumDefinition",
            "src": "241:52:0"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "status",
            "nameLocation": "303:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "296:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Status_$25",
              "typeString": "enum Argument.Status"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Status",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25,
                "src": "296:6:0"
              },
              "referencedDeclaration": 25,
              "src": "296:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Status_$25",
                "typeString": "enum Argument.Status"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 33,
            "mutability": "constant",
            "name": "defaultStatus",
            "nameLocation": "329:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "313:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Status_$25",
              "typeString": "enum Argument.Status"
            },
            "typeName": {
              "id": 30,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29,
                "name": "Status",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25,
                "src": "313:6:0"
              },
              "referencedDeclaration": 25,
              "src": "313:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Status_$25",
                "typeString": "enum Argument.Status"
              }
            },
            "value": {
              "expression": {
                "id": 31,
                "name": "Status",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 25,
                "src": "345:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_Status_$25_$",
                  "typeString": "type(enum Argument.Status)"
                }
              },
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "BETTING",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 21,
              "src": "345:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Status_$25",
                "typeString": "enum Argument.Status"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "378:33:0",
              "statements": [
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "384:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37,
                      "name": "defaultStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "393:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "src": "384:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$25",
                      "typeString": "enum Argument.Status"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "384:22:0"
                }
              ]
            },
            "id": 41,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "378:0:0"
            },
            "scope": 92,
            "src": "364:47:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "465:24:0",
              "statements": [
                {
                  "expression": {
                    "id": 47,
                    "name": "status",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28,
                    "src": "478:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$25",
                      "typeString": "enum Argument.Status"
                    }
                  },
                  "functionReturnParameters": 46,
                  "id": 48,
                  "nodeType": "Return",
                  "src": "471:13:0"
                }
              ]
            },
            "functionSelector": "4e69d560",
            "id": 50,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatus",
            "nameLocation": "424:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:2:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "457:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$25",
                    "typeString": "enum Argument.Status"
                  },
                  "typeName": {
                    "id": 44,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43,
                      "name": "Status",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25,
                      "src": "457:6:0"
                    },
                    "referencedDeclaration": 25,
                    "src": "457:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$25",
                      "typeString": "enum Argument.Status"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "456:8:0"
            },
            "scope": 92,
            "src": "415:74:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "525:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "531:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 54,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "540:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$25_$",
                          "typeString": "type(enum Argument.Status)"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DEBATING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "540:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "src": "531:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$25",
                      "typeString": "enum Argument.Status"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "531:24:0"
                }
              ]
            },
            "functionSelector": "5458cda3",
            "id": 59,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startDebating",
            "nameLocation": "502:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:0:0"
            },
            "scope": 92,
            "src": "493:67:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "604:136:0",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "632:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "632:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64,
                        "name": "truth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "614:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Truth_$192",
                          "typeString": "contract Truth"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isModerator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 191,
                      "src": "614:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "709:27:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "724:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 63,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "717:12:0"
                      }
                    ]
                  },
                  "id": 80,
                  "nodeType": "IfStatement",
                  "src": "610:126:0",
                  "trueBody": {
                    "id": 76,
                    "nodeType": "Block",
                    "src": "645:58:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 69,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "653:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$25",
                              "typeString": "enum Argument.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 70,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "662:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$25_$",
                                "typeString": "type(enum Argument.Status)"
                              }
                            },
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "CANCELED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "662:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$25",
                              "typeString": "enum Argument.Status"
                            }
                          },
                          "src": "653:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$25",
                            "typeString": "enum Argument.Status"
                          }
                        },
                        "id": 73,
                        "nodeType": "ExpressionStatement",
                        "src": "653:24:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "692:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 63,
                        "id": 75,
                        "nodeType": "Return",
                        "src": "685:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "ea8a1af0",
            "id": 82,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "573:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "598:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "597:6:0"
            },
            "scope": 92,
            "src": "564:176:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "774:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "780:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 86,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "789:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$25_$",
                          "typeString": "type(enum Argument.Status)"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "FINISHED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "789:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "src": "780:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$25",
                      "typeString": "enum Argument.Status"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "780:24:0"
                }
              ]
            },
            "functionSelector": "e1c9a0c6",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endDebating",
            "nameLocation": "753:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:2:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:0:0"
            },
            "scope": 92,
            "src": "744:65:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 93,
        "src": "200:611:0",
        "usedErrors": []
      }
    ],
    "src": "32:780:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Argument.sol",
    "exportedSymbols": {
      "Argument": [
        92
      ],
      "Truth": [
        192
      ],
      "Truthy": [
        18
      ]
    },
    "id": 93,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/Truth.sol",
        "file": "./Truth.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 193,
        "src": "66:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Truthy",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 18,
        "linearizedBaseContracts": [
          18
        ],
        "name": "Truthy",
        "nameLocation": "98:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "truth",
            "nameLocation": "115:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 18,
            "src": "109:11:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Truth_$192",
              "typeString": "contract Truth"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "Truth",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 192,
                "src": "109:5:0"
              },
              "referencedDeclaration": 192,
              "src": "109:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Truth_$192",
                "typeString": "contract Truth"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "158:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10,
                      "name": "truth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "164:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Truth_$192",
                        "typeString": "contract Truth"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12,
                          "name": "truthAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "178:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11,
                        "name": "Truth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "172:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Truth_$192_$",
                          "typeString": "type(contract Truth)"
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "172:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Truth_$192",
                        "typeString": "contract Truth"
                      }
                    },
                    "src": "164:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Truth_$192",
                      "typeString": "contract Truth"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "164:27:0"
                }
              ]
            },
            "id": 17,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "truthAddress",
                  "nameLocation": "144:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "136:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "136:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "135:22:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "158:0:0"
            },
            "scope": 18,
            "src": "124:72:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 93,
        "src": "89:109:0",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 19,
              "name": "Truthy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 18,
              "src": "230:6:0"
            },
            "id": 20,
            "nodeType": "InheritanceSpecifier",
            "src": "230:6:0"
          }
        ],
        "canonicalName": "Argument",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 92,
        "linearizedBaseContracts": [
          92,
          18
        ],
        "name": "Argument",
        "nameLocation": "218:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Argument.Status",
            "id": 25,
            "members": [
              {
                "id": 21,
                "name": "BETTING",
                "nameLocation": "254:7:0",
                "nodeType": "EnumValue",
                "src": "254:7:0"
              },
              {
                "id": 22,
                "name": "DEBATING",
                "nameLocation": "263:8:0",
                "nodeType": "EnumValue",
                "src": "263:8:0"
              },
              {
                "id": 23,
                "name": "FINISHED",
                "nameLocation": "273:8:0",
                "nodeType": "EnumValue",
                "src": "273:8:0"
              },
              {
                "id": 24,
                "name": "CANCELED",
                "nameLocation": "283:8:0",
                "nodeType": "EnumValue",
                "src": "283:8:0"
              }
            ],
            "name": "Status",
            "nameLocation": "246:6:0",
            "nodeType": "EnumDefinition",
            "src": "241:52:0"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "status",
            "nameLocation": "303:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "296:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Status_$25",
              "typeString": "enum Argument.Status"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Status",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25,
                "src": "296:6:0"
              },
              "referencedDeclaration": 25,
              "src": "296:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Status_$25",
                "typeString": "enum Argument.Status"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 33,
            "mutability": "constant",
            "name": "defaultStatus",
            "nameLocation": "329:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "313:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Status_$25",
              "typeString": "enum Argument.Status"
            },
            "typeName": {
              "id": 30,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29,
                "name": "Status",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25,
                "src": "313:6:0"
              },
              "referencedDeclaration": 25,
              "src": "313:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Status_$25",
                "typeString": "enum Argument.Status"
              }
            },
            "value": {
              "expression": {
                "id": 31,
                "name": "Status",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 25,
                "src": "345:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_Status_$25_$",
                  "typeString": "type(enum Argument.Status)"
                }
              },
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "BETTING",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 21,
              "src": "345:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Status_$25",
                "typeString": "enum Argument.Status"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "378:33:0",
              "statements": [
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "384:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37,
                      "name": "defaultStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "393:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "src": "384:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$25",
                      "typeString": "enum Argument.Status"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "384:22:0"
                }
              ]
            },
            "id": 41,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "378:0:0"
            },
            "scope": 92,
            "src": "364:47:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "465:24:0",
              "statements": [
                {
                  "expression": {
                    "id": 47,
                    "name": "status",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28,
                    "src": "478:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$25",
                      "typeString": "enum Argument.Status"
                    }
                  },
                  "functionReturnParameters": 46,
                  "id": 48,
                  "nodeType": "Return",
                  "src": "471:13:0"
                }
              ]
            },
            "functionSelector": "4e69d560",
            "id": 50,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatus",
            "nameLocation": "424:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "433:2:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "457:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$25",
                    "typeString": "enum Argument.Status"
                  },
                  "typeName": {
                    "id": 44,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43,
                      "name": "Status",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25,
                      "src": "457:6:0"
                    },
                    "referencedDeclaration": 25,
                    "src": "457:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$25",
                      "typeString": "enum Argument.Status"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "456:8:0"
            },
            "scope": 92,
            "src": "415:74:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "525:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "531:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 54,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "540:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$25_$",
                          "typeString": "type(enum Argument.Status)"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DEBATING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "540:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "src": "531:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$25",
                      "typeString": "enum Argument.Status"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "531:24:0"
                }
              ]
            },
            "functionSelector": "5458cda3",
            "id": 59,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startDebating",
            "nameLocation": "502:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "525:0:0"
            },
            "scope": 92,
            "src": "493:67:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "604:136:0",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "632:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "632:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64,
                        "name": "truth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "614:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Truth_$192",
                          "typeString": "contract Truth"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isModerator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 191,
                      "src": "614:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "709:27:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "724:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 63,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "717:12:0"
                      }
                    ]
                  },
                  "id": 80,
                  "nodeType": "IfStatement",
                  "src": "610:126:0",
                  "trueBody": {
                    "id": 76,
                    "nodeType": "Block",
                    "src": "645:58:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 69,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "653:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$25",
                              "typeString": "enum Argument.Status"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 70,
                              "name": "Status",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "662:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Status_$25_$",
                                "typeString": "type(enum Argument.Status)"
                              }
                            },
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "CANCELED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "662:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Status_$25",
                              "typeString": "enum Argument.Status"
                            }
                          },
                          "src": "653:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$25",
                            "typeString": "enum Argument.Status"
                          }
                        },
                        "id": 73,
                        "nodeType": "ExpressionStatement",
                        "src": "653:24:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "692:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 63,
                        "id": 75,
                        "nodeType": "Return",
                        "src": "685:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "ea8a1af0",
            "id": 82,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "573:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "598:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "597:6:0"
            },
            "scope": 92,
            "src": "564:176:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "774:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85,
                      "name": "status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "780:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 86,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "789:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$25_$",
                          "typeString": "type(enum Argument.Status)"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "FINISHED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "789:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$25",
                        "typeString": "enum Argument.Status"
                      }
                    },
                    "src": "780:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$25",
                      "typeString": "enum Argument.Status"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "780:24:0"
                }
              ]
            },
            "functionSelector": "e1c9a0c6",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endDebating",
            "nameLocation": "753:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:2:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:0:0"
            },
            "scope": 92,
            "src": "744:65:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 93,
        "src": "200:611:0",
        "usedErrors": []
      }
    ],
    "src": "32:780:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2021-12-24T23:37:21.017Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}